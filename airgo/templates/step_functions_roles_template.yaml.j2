AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Environment:
    Type: 'String'
    AllowedValues:
      - sandbox
      - stage
      - prod

Resources:
  TaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: "report-success"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - "states:SendTaskSuccess"
                Resource: "arn:aws:states:*:*:stateMachine:*"
                Effect: Allow
      RoleName: !Sub "${Environment}-{{PROJECT_NAME}}-task"

  TaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: "logs-access"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogStreams
                Resource:
                - arn:aws:logs:*:*:*
      RoleName: !Sub "${Environment}-{{PROJECT_NAME}}-execution"
  StateMachineIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - Fn::Sub: "states.${AWS::Region}.amazonaws.com"
            Action:
                - "sts:AssumeRole"
      Policies:
        -
          PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: "*"
              - Action:
                - ecs:RunTask
                Resource:
                - arn:aws:ecs:{{AWS_REGION}}:{{AWS_ID}}:task-definition/*
                Effect: Allow
              - Action:
                - ecs:StopTask
                - ecs:DescribeTasks
                Resource: "*"
                Effect: Allow
              - Action:
                - events:PutTargets
                - events:PutRule
                - events:DescribeRule
                Resource:
                - arn:aws:events:{{AWS_REGION}}:{{AWS_ID}}:rule/StepFunctionsGetEventsForECSTaskRule
                Effect: Allow
              - Effect: Allow
                Action:
                - iam:GetRole
                - iam:PassRole
                Resource:
                - !GetAtt [TaskRole, "Arn"]
                - !GetAtt [TaskExecutionRole, "Arn"]
              - Effect: Allow
                Action:
                - logs:CreateLogDelivery
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutLogEvents
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
                Resource: "*"
Outputs:
  TaskExecutionRole:
    Description: The TaskExecutionRole used for running the fargate tasks defined in this repo
    Value: !GetAtt [TaskExecutionRole, "Arn"]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-TaskExecutionRole"
  TaskRole:
    Description: The TaskRole used for starting up (secret access, etc) the fargate tasks defined in this repo
    Value: !GetAtt [TaskRole, "Arn"]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-TaskRole"
  StateMachineRole:
    Description: The StateMachineRole used for running the statemachines definied in this repo
    Value: !GetAtt [StateMachineIAMRole, "Arn"]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-StateMachineRole"
